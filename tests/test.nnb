{
    "cells": [
        {
            "language": "typescript",
            "source": [
                "var x = undefined\r\nconsole.log(`a/${x}`)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "a/undefined",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import * as winston from \"winston\"\r\nconst formatLog = ({\r\n    level,\r\n    message,\r\n    label,\r\n    timestamp\r\n  }: winston.Logform.TransformableInfo) =>\r\n    `[${level}] ${timestamp} ${label != undefined ? \" - \" + label : \"\"}- ${message.replace(\r\n      /(Bearer .*?)\"/,\r\n      \"*****\"\r\n    )}`;\r\n  winston.format.printf(formatLog)"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const args =  { _: [],\r\nurl: 'https://uni-demo03.rpc.uk.com',\r\ntoken: 'eyJ0eXAiOiJEQiJ9.eyJ1c2VybmFtZSI6IiQkaW50dXNlcjEifQ==.416B8871-E7F9-1B37-B71D-4A5FD54B002225E4AA87146361712E8F30A0A3F5079E',\r\ndbFile: './unifier-db.json',\r\n'db-file': './unifier-db.json',\r\ncheckFrequency: 1000,\r\n'check-frequency': 1000,\r\nloggingLevel: 'info',\r\n'logging-level': 'info',\r\n'$0': 'build\\\\build.cjs'\r\n};\r\n([\"url\", \"token\"]).every(x => x in args)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33mtrue\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "JSON.stringify(\"s\")"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[32m'\"s\"'\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "typeof \"a\" == \"string\""
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33mtrue\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import yargs from \"yargs\"\r\nconst ya = yargs.parse([\"--a\", \"1\"])\r\nya"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "{",
                                "  _: [],",
                                "  a: \u001b[33m1\u001b[39m,",
                                "  \u001b[32m'$0'\u001b[39m: \u001b[32m'c:\\\\Users\\\\james\\\\.vscode\\\\extensions\\\\donjayamanne.typescript-notebook-2.0.6\\\\out\\\\extension\\\\server\\\\index.js'\u001b[39m",
                                "}"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}